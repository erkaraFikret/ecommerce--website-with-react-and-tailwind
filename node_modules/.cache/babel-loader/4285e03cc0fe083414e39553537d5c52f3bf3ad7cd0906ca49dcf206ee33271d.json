{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monster\\\\Desktop\\\\ecommerce-shop-starter\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n  const addToCart = (product, id) => {\n    const newItem = {\n      ...product,\n      amount: 1\n    };\n    // check if the item is already in the cart \n    const cartITEM = cart.find(item => {\n      return item.id === id;\n    });\n    console.log(cartITEM);\n    if (cartITEM) {\n      const newCart = [...cart].map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            amount: cartITEM.amount + 1\n          };\n        } else {\n          return item;\n        }\n      });\n      setCart(newCart);\n    } else {\n      setCart([...cart, newItem]);\n    }\n  };\n  log;\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","CartContext","CartProvider","children","cart","setCart","addToCart","product","id","newItem","amount","cartITEM","find","item","console","log","newCart","map"],"sources":["C:/Users/Monster/Desktop/ecommerce-shop-starter/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const CartContext = createContext()\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([])\r\n\r\n  const addToCart = (product, id) => {\r\n    const newItem = { ...product, amount: 1 }\r\n    // check if the item is already in the cart \r\n    const cartITEM = cart.find(item => {\r\n      return item.id === id;\r\n    })\r\n    console.log(cartITEM);\r\n    if (cartITEM) {\r\n      const newCart = [...cart].map(item => {\r\n        if (item.id === id) {\r\n          return { ...item, amount: cartITEM.amount + 1 }\r\n        } else {\r\n          return item;\r\n        }\r\n      })\r\n      setCart(newCart)\r\n    } else {\r\n      setCart([...cart, newItem])\r\n    }\r\n  };\r\n  log\r\n\r\n  return <CartContext.Provider value={{ addToCart }}>\r\n    {children}\r\n  </CartContext.Provider>;\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEvD,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAE;AAE1C,MAAMG,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,SAAS,GAAG,CAACC,OAAO,EAAEC,EAAE,KAAK;IACjC,MAAMC,OAAO,GAAG;MAAE,GAAGF,OAAO;MAAEG,MAAM,EAAE;IAAE,CAAC;IACzC;IACA,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,IAAI,CAACC,IAAI,IAAI;MACjC,OAAOA,IAAI,CAACL,EAAE,KAAKA,EAAE;IACvB,CAAC,CAAC;IACFM,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IACrB,IAAIA,QAAQ,EAAE;MACZ,MAAMK,OAAO,GAAG,CAAC,GAAGZ,IAAI,CAAC,CAACa,GAAG,CAACJ,IAAI,IAAI;QACpC,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,EAAE;UAClB,OAAO;YAAE,GAAGK,IAAI;YAAEH,MAAM,EAAEC,QAAQ,CAACD,MAAM,GAAG;UAAE,CAAC;QACjD,CAAC,MAAM;UACL,OAAOG,IAAI;QACb;MACF,CAAC,CAAC;MACFR,OAAO,CAACW,OAAO,CAAC;IAClB,CAAC,MAAM;MACLX,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEK,OAAO,CAAC,CAAC;IAC7B;EACF,CAAC;EACDM,GAAG;EAEH,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAET;IAAU,CAAE;IAAA,UAC/CH;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AACzB,CAAC;AAAC,GA5BID,YAAY;AAAA,KAAZA,YAAY;AA8BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}